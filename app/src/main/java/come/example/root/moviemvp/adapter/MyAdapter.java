package come.example.root.moviemvp.adapter;import android.content.Context;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import com.squareup.picasso.Picasso;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;import butterknife.BindView;import come.example.root.moviemvp.R;import come.example.root.moviemvp.model.Movie;public class MyAdapter extends RecyclerView.Adapter<MyAdapter.Holder>{    private Context context;    private List<Movie> movies;    public MyAdapter(Context context, List<Movie> movies) {        this.context = context;        this.movies = movies;    }    public List<Movie> getMovies() {        return movies;    }    public void setMovies(List<Movie> movies) {        this.movies = movies;    }    public void addItem(List<Movie> movies){        this.movies = movies;        notifyDataSetChanged();    }    @NonNull    @Override    public MyAdapter.Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(context).inflate(R.layout.movie_item, parent, false);        return new Holder(view);    }    @Override    public void onBindViewHolder(@NonNull MyAdapter.Holder holder, int position) {        Movie movie = movies.get(position);        //set movie title        String get_title = movie.getTitle();        holder.title.setText(get_title);        //set movie release        String get_release = movie.getRelease();        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");        try {            Date date = dateFormat.parse(get_release);            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("EEEE, MM dd, yyyy");            String setDate = simpleDateFormat.format(date);            holder.release.setText("Release date : "+setDate);        } catch (ParseException e){            e.printStackTrace();        }        //set movie overview        String get_overview = "Nothing overview";        if (!movie.getTitle().isEmpty()){            get_overview = movie.getOverview();        }        holder.overview.setText(get_overview);        //set movie poster        String poster_path = movie.getPoster();        String poster_url = "http://image.tmdb.org/t/p/w185/";        Picasso.with(context).load(poster_url+poster_path).placeholder(                context.getResources()                .getDrawable(R.mipmap.ic_launcher))                .error(context.getResources()                .getDrawable(R.mipmap.ic_launcher))                .into(holder.poster);    }    @Override    public int getItemCount() {        return movies.size();    }    public class Holder extends RecyclerView.ViewHolder {//        @BindView(R.id.poster)        ImageView poster;//        @BindView(R.id.title)        TextView title;//        @BindView(R.id.release)        TextView release;//        @BindView(R.id.overview)        TextView overview;        public Holder(View itemView) {            super(itemView);            poster = (ImageView) itemView.findViewById(R.id.poster);            title = (TextView)itemView.findViewById(R.id.title);            release = (TextView)itemView.findViewById(R.id.release);            overview = (TextView)itemView.findViewById(R.id.overview);        }    }}